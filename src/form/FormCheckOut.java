/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import connect.Connect;
import java.awt.Color;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCheckIn;
import model.ModelCheckInv2;
import model.ModelCheckOut;
import model.ModelCheckOutv2;
import model.ModelPhong;
import model.ModelPhongv2;
import model.ModelServiceRentv2;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author TeeDee
 */
public class FormCheckOut extends javax.swing.JPanel {

    /**
     * Creates new form FormCheckOut
     */
    public FormCheckOut() {
        initComponents();
    }
    
    Connect cn = new Connect();
    Connection conn;
    DefaultTableModel tbmodel;

    private String username, password, quyen, DisplayName;
    
    public FormCheckOut(String username, String password, String DisplayName, String quyen) {
        initComponents();
        this.username = username;
        this.password = password;
        this.DisplayName = DisplayName;
        this.quyen = quyen;
        
        
        initCombobox_maphieuthuephong();
  
       

        inittable();
        loaddulieu1();
    }
    
    private void inittable() {
        tbmodel = new DefaultTableModel();
        tbmodel.setColumnIdentifiers(new String[]{"Mã phiếu trả phòng", "Mã phiếu thuê phòng",  "Ngày đặt phòng", "Ngày thuê phòng", "Mã phòng", "Tên phòng", "Loại phòng",  "Giá phòng", "VAT","Giá hóa đơn", "Ngày lập hóa đơn"});
        TBcheckout.setModel(tbmodel);
    }
    
     public void loaddulieu1() {
        try {
            ModelCheckOut ql = new ModelCheckOut();
            ArrayList<ModelCheckOutv2> list = ql.findALL();
            tbmodel.setRowCount(0);
            for (ModelCheckOutv2 p : list) {
                tbmodel.addRow(new Object[]{
//      "Mã phiếu trả phòng, Mã phiếu thuê phòng", "Ngày thuê phòng",  "Ngày đặt phòng", "Tên phòng", "Loại phòng",  "Giá phòng", "Giá hóa đơn", "Ngày lập hóa đơn"});

                    p.getMaHoaDonPhong(), p.getMaPhieuThuePhong(), p.getNgayDatPhong(), p.getNgayThuePhong(), p.getMaPhong(),p.getTenPhong(), p.getLoaiPhong(),  p.getFormattedGia(),p.getFormattedVAT(), p.getFormattedGiahd(), p.getNgayLapHoaDon()
                });
            }
            tbmodel.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }

    }
     
    private void initCombobox_maphieuthuephong() {
        try {
            conn = cn.getConnection();
            String sql = "Select maphieuthuephong from PhieuThuePhong where isvisible = '1' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            cmbmaphieuthuephong.removeAllItems();
          
            while (rs.next()) {
                cmbmaphieuthuephong.addItem(rs.getString("maphieuthuephong"));
            }
            rs.close();
            pstmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundPanel5 = new swing.RoundPanel();
        jLabel10 = new javax.swing.JLabel();
        btnEdit = new swing.Button();
        btnAdd = new swing.Button();
        bthDelete = new swing.Button();
        btnRefresh = new swing.Button();
        jLabel21 = new javax.swing.JLabel();
        jDateChooserngaythuephong = new com.toedter.calendar.JDateChooser();
        cmbmaphieuthuephong = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jDateChooserngaylaphd = new com.toedter.calendar.JDateChooser();
        btnPay = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jDateChooserngaydatphong = new com.toedter.calendar.JDateChooser();
        btnReport = new javax.swing.JButton();
        txtMaphieutraphong = new component.TextField();
        txtMaPhong = new component.TextField();
        txtTenPhong = new component.TextField();
        txtloaiphong = new component.TextField();
        txtGiaPhong = new component.TextField();
        txtGiahd = new component.TextField();
        txtVAT = new component.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBcheckout = new javax.swing.JTable();
        panelBorder2 = new swing.PanelBorder();
        rbMAKH1 = new javax.swing.JRadioButton();
        txtSEARCHMAKH = new javax.swing.JTextField();
        rbsearchngaydat = new javax.swing.JRadioButton();
        btnSearch = new swing.Button();
        btnView = new swing.Button();
        jDateChooserTim = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        roundPanel5.setBackground(new java.awt.Color(36, 87, 157));
        roundPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin trả phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Mã phiếu thuê phòng:");

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        bthDelete.setText("Xóa");
        bthDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthDeleteActionPerformed(evt);
            }
        });

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Ngày thuê phòng:");

        jDateChooserngaythuephong.setEnabled(false);

        cmbmaphieuthuephong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbmaphieuthuephongItemStateChanged(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Ngày lập HĐ:");

        btnPay.setBackground(new java.awt.Color(255, 102, 102));
        btnPay.setText("Tính tiền");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Ngày đặt phòng:");

        jDateChooserngaydatphong.setEnabled(false);

        btnReport.setBackground(new java.awt.Color(255, 99, 76));
        btnReport.setText("In Report");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        txtMaphieutraphong.setLabelText("Mã phiếu trả phòng");
        txtMaphieutraphong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaphieutraphongActionPerformed(evt);
            }
        });

        txtMaPhong.setLabelText("Mã phòng");
        txtMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhongActionPerformed(evt);
            }
        });

        txtTenPhong.setLabelText("Tên phòng");
        txtTenPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenPhongActionPerformed(evt);
            }
        });

        txtloaiphong.setLabelText("Loại phòng");
        txtloaiphong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtloaiphongActionPerformed(evt);
            }
        });

        txtGiaPhong.setLabelText("Giá phòng");
        txtGiaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaPhongActionPerformed(evt);
            }
        });

        txtGiahd.setLabelText("Giá hóa đơn");
        txtGiahd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiahdActionPerformed(evt);
            }
        });

        txtVAT.setLabelText("Giá VAT");
        txtVAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVATActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundPanel5Layout = new javax.swing.GroupLayout(roundPanel5);
        roundPanel5.setLayout(roundPanel5Layout);
        roundPanel5Layout.setHorizontalGroup(
            roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel5Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(roundPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmbmaphieuthuephong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(roundPanel5Layout.createSequentialGroup()
                            .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel21)
                                .addComponent(jLabel19)
                                .addComponent(jLabel15))
                            .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(roundPanel5Layout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jDateChooserngaylaphd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jDateChooserngaythuephong, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel5Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateChooserngaydatphong, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(txtMaphieutraphong, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addComponent(bthDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addComponent(txtTenPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtloaiphong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGiaPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel5Layout.createSequentialGroup()
                                .addComponent(txtVAT, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtGiahd, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(54, 54, 54))
        );
        roundPanel5Layout.setVerticalGroup(
            roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addComponent(txtMaphieutraphong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbmaphieuthuephong, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserngaydatphong, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roundPanel5Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel15)))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserngaythuephong, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roundPanel5Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel21)))
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserngaylaphd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roundPanel5Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel19))))
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtloaiphong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGiahd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bthDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TBcheckout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TBcheckout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TBcheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBcheckoutMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TBcheckout);

        panelBorder2.setBackground(new java.awt.Color(36, 87, 157));
        panelBorder2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        panelBorder2.setForeground(new java.awt.Color(255, 255, 255));

        rbMAKH1.setBackground(new java.awt.Color(36, 87, 157));
        rbMAKH1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbMAKH1.setForeground(new java.awt.Color(255, 255, 255));
        rbMAKH1.setText("Mã khách hàng:");

        rbsearchngaydat.setBackground(new java.awt.Color(36, 87, 157));
        rbsearchngaydat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbsearchngaydat.setForeground(new java.awt.Color(255, 255, 255));
        rbsearchngaydat.setText("Ngày thuê phòng:");

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnView.setText("Xem");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(rbsearchngaydat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooserTim, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(rbMAKH1)
                        .addGap(31, 31, 31)
                        .addComponent(txtSEARCHMAKH, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMAKH1)
                    .addComponent(txtSEARCHMAKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooserTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbsearchngaydat)))
                .addGap(12, 12, 12))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Thông tin trả phòng:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roundPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        Date selectedDate = jDateChooserngaylaphd.getDate();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(selectedDate);

        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH) + 1; // Tháng bắt đầu từ 0, nên cộng thêm 1 để có giá trị tháng thực
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        String ngayhd = year + "-" + month + "-" + day;

        StringBuilder sb = new StringBuilder();
        if (txtMaphieutraphong.getText().equals("")) {
            sb.append("Mã phiếu trả phòng không được để trống");
            txtMaphieutraphong.setBackground(Color.red);

        } else {
            txtMaphieutraphong.setBackground(Color.white);
 
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
        }
        String Maphieuthuephong = cmbmaphieuthuephong.getSelectedItem().toString();

        try {
            ModelCheckOutv2 ci = new ModelCheckOutv2();
            ci.setMaHoaDonPhong(txtMaphieutraphong.getText());
            ci.setNgayLapHoaDon(ngayhd);
            ci.setMaPhieuThuePhong(Maphieuthuephong);

            ModelCheckOut ql1 = new ModelCheckOut();
            ql1.update(ci);

            JOptionPane.showMessageDialog(this, "Lưu thành công!!!");
            
            
            int row = TBcheckout.getSelectedRow();
            if (row >= 0) {
                String maphong = TBcheckout.getValueAt(row, 5).toString();
                
                ModelPhongv2 p = new ModelPhongv2();
                p.setMaPhong(maphong);

                ModelPhong ql = new ModelPhong();
                ql.updateTT3(p);

            }
            ModelPhongv2 p = new ModelPhongv2();
            p.setMaPhong(txtMaPhong.getText());

            ModelPhong ql = new ModelPhong();
            ql.updateTT1(p);
            
            
            
            
            loaddulieu1();
        } catch (Exception e) {
            //            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Mã hóa đơn phòng này đã tồn tại, nếu muốn thêm với mã hóa đơn phòng này vui lòng xóa phiếu đặt phòng trong db");
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        Date selectedDate = jDateChooserngaylaphd.getDate();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(selectedDate);

        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH) + 1; // Tháng bắt đầu từ 0, nên cộng thêm 1 để có giá trị tháng thực
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        String ngayhd = year + "-" + month + "-" + day;

        StringBuilder sb = new StringBuilder();
        if (txtMaphieutraphong.getText().equals("")) {
            sb.append("Mã phiếu trả phòng không được để trống");
            txtMaphieutraphong.setBackground(Color.red);

        } else {
            txtMaphieutraphong.setBackground(Color.white);
            
            String Maphieuthuephong = cmbmaphieuthuephong.getSelectedItem().toString();

            try {
                ModelCheckOutv2 ci = new ModelCheckOutv2();
                ci.setMaHoaDonPhong(txtMaphieutraphong.getText());
                ci.setNgayLapHoaDon(ngayhd);
                ci.setMaPhieuThuePhong(Maphieuthuephong);

                ModelCheckOut ql1 = new ModelCheckOut();
                ql1.insert(ci);

                JOptionPane.showMessageDialog(this, "Lưu thành công!!!");
                
                
                ModelPhongv2 p = new ModelPhongv2();
                p.setMaPhong(txtMaPhong.getText());

                ModelPhong ql = new ModelPhong();
                ql.updateTT1(p);
            
                
                
                
                
                loaddulieu1();
            } catch (Exception e) {
                //            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Mã hóa đơn phòng này đã tồn tại, nếu muốn thêm với mã hóa đơn phòng này vui lòng xóa phiếu đặt phòng trong db");
                e.printStackTrace();
            }
            
            
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
        }

        
    }//GEN-LAST:event_btnAddActionPerformed

    private void bthDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthDeleteActionPerformed
        // TODO add your handling code here:

        StringBuilder sb = new StringBuilder();
        if (txtMaphieutraphong.getText().equals("")) {
            sb.append("Mã phiếu trả phòng không được để trống");
            txtMaphieutraphong.setBackground(Color.red);

        } else {
            txtMaphieutraphong.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
        }
        try {
            ModelCheckOutv2 ci = new ModelCheckOutv2();//MaHoaDonPhong
            ci.setMaHoaDonPhong(txtMaphieutraphong.getText());

            ModelCheckOut ql1 = new ModelCheckOut();
            ql1.deletecomeroot(ci);

            JOptionPane.showMessageDialog(this, "Lưu thành công!!!");
            
            
            int row = TBcheckout.getSelectedRow();
            if (row >= 0) {
                String maphong = TBcheckout.getValueAt(row, 5).toString();
                
                ModelPhongv2 p = new ModelPhongv2();
                p.setMaPhong(maphong);

                ModelPhong ql = new ModelPhong();
                ql.updateTT3(p);
                
  
            }
            
            
            loaddulieu1();
        } catch (Exception e) {
            //            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Mã phiếu đặt phòng này đã tồn tại, nếu muốn thêm với mã phiếu đặt phòng này vui lòng xóa phiếu đặt phòng trong db");
            e.printStackTrace();
        }

        
        
    }//GEN-LAST:event_bthDeleteActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void cmbmaphieuthuephongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbmaphieuthuephongItemStateChanged
        // TODO add your handling code here:
        String Mapdp = cmbmaphieuthuephong.getSelectedItem().toString();
        try {
            ModelCheckIn ql = new ModelCheckIn();

            ModelCheckInv2 ttp = ql.findByID(Mapdp);
            if (ttp != null) {

                String ngaythuephong = ttp.getNgayThuePhong();

                try {
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
                    Date selectedDatee = dateFormat.parse(ngaythuephong); // Phân tích chuỗi thành đối tượng Date
                    jDateChooserngaythuephong.setDate(selectedDatee); // Đặt giá trị ngày cho JDateChooser
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                
                String Ngaydatphong = ttp.getNgayDatPhong();
                try {
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
                    Date selectedDatee = dateFormat.parse(ngaythuephong); // Phân tích chuỗi thành đối tượng Date
                    jDateChooserngaydatphong.setDate(selectedDatee); // Đặt giá trị ngày cho JDateChooser
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                
                txtMaPhong.setText(ttp.getMaPhong());
                txtTenPhong.setText(ttp.getTenPhong());
                txtloaiphong.setText(ttp.getTenPhong());
                txtloaiphong.setText(ttp.getLoaiPhong());
                txtGiaPhong.setText(ttp.getFormattedGia());
//                txtGiahd.setText(ttp.get);
                
                
                
            } else {
                JOptionPane.showMessageDialog(this, "Không tim thấy mã khách hàng");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbmaphieuthuephongItemStateChanged

    private void TBcheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBcheckoutMouseClicked
        // TODO add your handling code here:
        int row = TBcheckout.getSelectedRow();

        if (row >= 0) {
            txtMaphieutraphong.setText(TBcheckout.getValueAt(row, 0).toString());

            String maphieuthuephong = TBcheckout.getValueAt(row, 1).toString();
            System.out.println("" + maphieuthuephong);
            cmbmaphieuthuephong.setSelectedItem(maphieuthuephong);
            
            
            
            String ngaydatphong = TBcheckout.getValueAt(row, 2).toString();

            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
                Date selectedDate = dateFormat.parse(ngaydatphong); // Phân tích chuỗi thành đối tượng Date
                jDateChooserngaydatphong.setDate(selectedDate); // Đặt giá trị ngày cho JDateChooser
            } catch (ParseException e) {
                e.printStackTrace();
            }
            
            String ngaythuephong = TBcheckout.getValueAt(row, 3).toString();

            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
                Date selectedDate = dateFormat.parse(ngaythuephong); // Phân tích chuỗi thành đối tượng Date
                jDateChooserngaythuephong.setDate(selectedDate); // Đặt giá trị ngày cho JDateChooser
            } catch (ParseException e) {
                e.printStackTrace();
            }
            
            txtMaPhong.setText(TBcheckout.getValueAt(row, 4).toString());
            txtTenPhong.setText(TBcheckout.getValueAt(row, 5).toString());
            txtloaiphong.setText(TBcheckout.getValueAt(row, 6).toString());


            txtGiaPhong.setText(TBcheckout.getValueAt(row, 7).toString());
            
            txtVAT.setText(TBcheckout.getValueAt(row, 8).toString());
            txtGiahd.setText(TBcheckout.getValueAt(row, 9).toString());
            

            String ngaylaphd = TBcheckout.getValueAt(row, 10).toString();

            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
                Date selectedDate = dateFormat.parse(ngaylaphd); // Phân tích chuỗi thành đối tượng Date
                jDateChooserngaylaphd.setDate(selectedDate); // Đặt giá trị ngày cho JDateChooser
            } catch (ParseException e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_TBcheckoutMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
        

        String tmp = txtGiaPhong.getText();

        DecimalFormat decimalFormat = new DecimalFormat("#,### VND");

        try {
            Number giaNumber = decimalFormat.parse(tmp);
            // Lấy giá trị số từ đối tượng Number
            Float gia = giaNumber.floatValue();

//            System.out.println(gia);

            Date date1 = jDateChooserngaythuephong.getDate();
            Date date2 = jDateChooserngaylaphd.getDate();
            
            if (date1 != null && date2 != null) {
                LocalDate localDate1 = date1.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();
                LocalDate localDate2 = date2.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();

                // Tính khoảng cách giữa hai ngày bằng Period
                float daysDifference = ChronoUnit.DAYS.between(localDate1, localDate2);
                System.out.println("Difference in days: " + daysDifference);
                
                
                Float tmp2;
                tmp2 = (float) (daysDifference * gia);
                BigDecimal giahd = BigDecimal.valueOf(tmp2);

                ModelCheckOutv2 sr = new ModelCheckOutv2();
                sr.setGiaHD(giahd);
                String formattedhoadon = sr.getFormattedGiahd();
                txtGiahd.setText(formattedhoadon);
            }
            


        } catch (ParseException ex) {
            Logger.getLogger(FormServiceRent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
       
        
        if (txtMaphieutraphong.getText().equals("")==true) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn mã phiếu dịch vụ mã nhân viên và mã khách hàng");
        } else {
            try {
                Map<String, Object> map = new HashMap<>();
                JasperReport rpt = JasperCompileManager.compileReport("src/report/rpCheckOut.jrxml");
                map.put("mahoadonphong", txtMaphieutraphong.getText());
                conn = cn.getConnection();
                JasperPrint p = JasperFillManager.fillReport(rpt, map, conn);
                JasperViewer.viewReport(p, false);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void txtMaphieutraphongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaphieutraphongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaphieutraphongActionPerformed

    private void txtMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhongActionPerformed

    private void txtTenPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenPhongActionPerformed

    private void txtloaiphongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtloaiphongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtloaiphongActionPerformed

    private void txtGiaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaPhongActionPerformed

    private void txtGiahdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiahdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiahdActionPerformed

    private void txtVATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVATActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVATActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TBcheckout;
    private swing.Button bthDelete;
    private swing.Button btnAdd;
    private swing.Button btnEdit;
    private javax.swing.JButton btnPay;
    private swing.Button btnRefresh;
    private javax.swing.JButton btnReport;
    private swing.Button btnSearch;
    private swing.Button btnView;
    private javax.swing.JComboBox<String> cmbmaphieuthuephong;
    private com.toedter.calendar.JDateChooser jDateChooserTim;
    private com.toedter.calendar.JDateChooser jDateChooserngaydatphong;
    private com.toedter.calendar.JDateChooser jDateChooserngaylaphd;
    private com.toedter.calendar.JDateChooser jDateChooserngaythuephong;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private swing.PanelBorder panelBorder2;
    private javax.swing.JRadioButton rbMAKH1;
    private javax.swing.JRadioButton rbsearchngaydat;
    private swing.RoundPanel roundPanel5;
    private component.TextField txtGiaPhong;
    private component.TextField txtGiahd;
    private component.TextField txtMaPhong;
    private component.TextField txtMaphieutraphong;
    private javax.swing.JTextField txtSEARCHMAKH;
    private component.TextField txtTenPhong;
    private component.TextField txtVAT;
    private component.TextField txtloaiphong;
    // End of variables declaration//GEN-END:variables
}
