/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import connect.Connect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCheckOut;
import model.ModelCheckOutv2;
import model.ModelServiceRent;
import model.ModelServiceRentv2;

/**
 *
 * @author TeeDee
 */
public class FormServiceRent extends javax.swing.JPanel {

    /**
     * Creates new form FormServiceRent
     */
    public FormServiceRent() {
        initComponents();
    }
    
    Connect cn = new Connect();
    Connection conn;
    DefaultTableModel tbmodel;

    private String username, password, quyen, DisplayName;
    
    public FormServiceRent(String username, String password, String DisplayName, String quyen) {
        initComponents();
        this.username = username;
        this.password = password;
        this.DisplayName = DisplayName;
        this.quyen = quyen;
        
        
        initCombobox_madichvu();
        initCombobox_manhanvien();
        initCombobox_makhachhang();
  
       

        inittable();
        loaddulieu1();
    }
    
    private void inittable() {
        tbmodel = new DefaultTableModel();
        tbmodel.setColumnIdentifiers(new String[]{"Mã dịch vụ", "Tên dịch vụ", "Mã nhân viên",  "Tên nhân viên",
            "Mã khách hàng", "Tên khách hàng", "Ngày lập hóa đơn", "Đơn giá",  "Số lượng", "Giá hóa đơn"});
        TBcheckout.setModel(tbmodel);
    }
    
     public void loaddulieu1() {
        try {
            ModelServiceRent ql = new ModelServiceRent();
            ArrayList<ModelServiceRentv2> list = ql.findALL();
            tbmodel.setRowCount(0);
            for (ModelServiceRentv2 p : list) {
                tbmodel.addRow(new Object[]{
                    p.getMaDV(), p.getTenDichVu(), p.getMaNV(), p.getTenNhanVien(), p.getMaKH(),p.getTenKH(),p.getNgayLapHD(), p.getGia(),  p.getSL()
                });
            }
            tbmodel.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }

    }
     
    private void initCombobox_madichvu() {
        try {
            conn = cn.getConnection();
            String sql = "select MaDV from DICHVU where isvisible = '1' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            cmbmadichvu.removeAllItems();
          
            while (rs.next()) {
                cmbmadichvu.addItem(rs.getString("MaDV"));
            }
            rs.close();
            pstmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void initCombobox_manhanvien() {
        try {
            conn = cn.getConnection();
            String sql = "select MaNV from NhanVien where isvisible = '1' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            cmbMaNhanvien.removeAllItems();
          
            while (rs.next()) {
                cmbMaNhanvien.addItem(rs.getString("MaNV"));
            }
            rs.close();
            pstmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void initCombobox_makhachhang() {
        try {
            conn = cn.getConnection();
            String sql = "select MaKH from KhachHang where isvisible = '1' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            cmbmakhachhang.removeAllItems();
          
            while (rs.next()) {
                cmbmakhachhang.addItem(rs.getString("MaKH"));
            }
            rs.close();
            pstmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtloaiphong = new javax.swing.JTextField();
        roundPanel5 = new swing.RoundPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        btnEdit = new swing.Button();
        btnAdd = new swing.Button();
        bthDelete = new swing.Button();
        btnRefresh = new swing.Button();
        txtGiaDichvu = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbmadichvu = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        txtGiahd = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jDateChooserngaylaphoadon = new com.toedter.calendar.JDateChooser();
        txtTenDichVu = new javax.swing.JTextField();
        cmbMaNhanvien = new javax.swing.JComboBox<>();
        txtTenNhanVien = new javax.swing.JTextField();
        cmbmakhachhang = new javax.swing.JComboBox<>();
        spSL = new javax.swing.JSpinner();
        panelBorder2 = new swing.PanelBorder();
        rbMAKH1 = new javax.swing.JRadioButton();
        txtSEARCHMAKH = new javax.swing.JTextField();
        rbsearchngaydat = new javax.swing.JRadioButton();
        btnSearch = new swing.Button();
        btnView = new swing.Button();
        jDateChooserTim = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBcheckout = new javax.swing.JTable();

        txtloaiphong.setEnabled(false);

        roundPanel5.setBackground(new java.awt.Color(36, 87, 157));
        roundPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin thuê dịch vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tên dịch vụ:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Tên khách hàng:");

        txtTenKH.setEnabled(false);

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        bthDelete.setText("Xóa");
        bthDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthDeleteActionPerformed(evt);
            }
        });

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        txtGiaDichvu.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Giá dịch vụ:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Tên nhân viên:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Số lượng:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Mã nhân viên:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Mã dịch vụ:");

        cmbmadichvu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbmadichvuItemStateChanged(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Giá hóa đơn:");

        txtGiahd.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Mã khách hàng:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Ngày lập hóa đơn:");

        cmbMaNhanvien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMaNhanvienItemStateChanged(evt);
            }
        });

        cmbmakhachhang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbmakhachhangItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout roundPanel5Layout = new javax.swing.GroupLayout(roundPanel5);
        roundPanel5.setLayout(roundPanel5Layout);
        roundPanel5Layout.setHorizontalGroup(
            roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel5Layout.createSequentialGroup()
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel21)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15)
                            .addComponent(jLabel20))
                        .addGap(28, 28, 28)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbmadichvu, 0, 249, Short.MAX_VALUE)
                            .addComponent(txtTenDichVu)
                            .addComponent(cmbMaNhanvien, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTenNhanVien, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spSL))))
                .addGap(18, 18, 18)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addComponent(bthDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel5Layout.createSequentialGroup()
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16)
                            .addComponent(jLabel22)
                            .addComponent(jLabel19))
                        .addGap(47, 47, 47)
                        .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                            .addComponent(txtGiahd, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                            .addComponent(txtGiaDichvu)
                            .addComponent(jDateChooserngaylaphoadon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbmakhachhang, 0, 281, Short.MAX_VALUE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        roundPanel5Layout.setVerticalGroup(
            roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(cmbmakhachhang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(cmbmadichvu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel16)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(cmbMaNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19)
                    .addComponent(jDateChooserngaylaphoadon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txtGiaDichvu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtGiahd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(spSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bthDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBorder2.setBackground(new java.awt.Color(36, 87, 157));
        panelBorder2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        panelBorder2.setForeground(new java.awt.Color(255, 255, 255));

        rbMAKH1.setBackground(new java.awt.Color(36, 87, 157));
        rbMAKH1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbMAKH1.setForeground(new java.awt.Color(255, 255, 255));
        rbMAKH1.setText("Mã khách hàng:");

        rbsearchngaydat.setBackground(new java.awt.Color(36, 87, 157));
        rbsearchngaydat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbsearchngaydat.setForeground(new java.awt.Color(255, 255, 255));
        rbsearchngaydat.setText("Ngày thuê phòng:");

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnView.setText("Xem");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(rbsearchngaydat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooserTim, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(rbMAKH1)
                        .addGap(31, 31, 31)
                        .addComponent(txtSEARCHMAKH, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMAKH1)
                    .addComponent(txtSEARCHMAKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooserTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbsearchngaydat)))
                .addGap(12, 12, 12))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Thông tin trả phòng:");

        TBcheckout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TBcheckout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TBcheckout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBcheckoutMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TBcheckout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roundPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roundPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
//        Date selectedDate = jDateChooserngaylaphd.getDate();
//        Calendar calendar = Calendar.getInstance();
//        calendar.setTime(selectedDate);
//
//        int year = calendar.get(Calendar.YEAR);
//        int month = calendar.get(Calendar.MONTH) + 1; // Tháng bắt đầu từ 0, nên cộng thêm 1 để có giá trị tháng thực
//        int day = calendar.get(Calendar.DAY_OF_MONTH);
//        String ngayhd = year + "-" + month + "-" + day;
//
//        StringBuilder sb = new StringBuilder();
//        if (txtTenDichVu.getText().equals("")) {
//            sb.append("Mã phiếu trả phòng không được để trống");
//            txtTenDichVu.setBackground(Color.red);
//
//        } else {
//            txtTenDichVu.setBackground(Color.white);
//
//        }
//        if (sb.length() > 0) {
//            JOptionPane.showMessageDialog(this, sb);
//        }
//        String Maphieuthuephong = cmbmadichvu.getSelectedItem().toString();
//
//        try {
//            ModelCheckOutv2 ci = new ModelCheckOutv2();
//            ci.setMaHoaDonPhong(txtTenDichVu.getText());
//            ci.setNgayLapHoaDon(ngayhd);
//            ci.setMaPhieuThuePhong(Maphieuthuephong);
//
//            ModelCheckOut ql1 = new ModelCheckOut();
//            ql1.update(ci);
//
//            JOptionPane.showMessageDialog(this, "Lưu thành công!!!");
//
//            int row = TBcheckout.getSelectedRow();
//            if (row >= 0) {
//                String maphong = TBcheckout.getValueAt(row, 5).toString();
//
//                ModelPhongv2 p = new ModelPhongv2();
//                p.setMaPhong(maphong);
//
//                ModelPhong ql = new ModelPhong();
//                ql.updateTT3(p);
//
//            }
//            ModelPhongv2 p = new ModelPhongv2();
//            p.setMaPhong(txtMaPhong.getText());
//
//            ModelPhong ql = new ModelPhong();
//            ql.updateTT1(p);
//
//            loaddulieu1();
//        } catch (Exception e) {
//            //            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
//            JOptionPane.showMessageDialog(this, "Mã hóa đơn phòng này đã tồn tại, nếu muốn thêm với mã hóa đơn phòng này vui lòng xóa phiếu đặt phòng trong db");
//            e.printStackTrace();
//        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

//         Date selectedDate = jDateChooserngaylaphd.getDate();
//        Calendar calendar = Calendar.getInstance();
//        calendar.setTime(selectedDate);
//
//        int year = calendar.get(Calendar.YEAR);
//        int month = calendar.get(Calendar.MONTH) + 1; // Tháng bắt đầu từ 0, nên cộng thêm 1 để có giá trị tháng thực
//        int day = calendar.get(Calendar.DAY_OF_MONTH);
//        String ngayhd = year + "-" + month + "-" + day;
//
//        StringBuilder sb = new StringBuilder();
//        if (txtTenDichVu.getText().equals("")) {
//            sb.append("Mã phiếu trả phòng không được để trống");
//            txtTenDichVu.setBackground(Color.red);
//
//        } else {
//            txtTenDichVu.setBackground(Color.white);
//
//            String Maphieuthuephong = cmbmadichvu.getSelectedItem().toString();
//
//            try {
//                ModelCheckOutv2 ci = new ModelCheckOutv2();
//                ci.setMaHoaDonPhong(txtTenDichVu.getText());
//                ci.setNgayLapHoaDon(ngayhd);
//                ci.setMaPhieuThuePhong(Maphieuthuephong);
//
//                ModelCheckOut ql1 = new ModelCheckOut();
//                ql1.insert(ci);
//
//                JOptionPane.showMessageDialog(this, "Lưu thành công!!!");
//
//                ModelPhongv2 p = new ModelPhongv2();
//                p.setMaPhong(txtMaPhong.getText());
//
//                ModelPhong ql = new ModelPhong();
//                ql.updateTT1(p);
//
//                loaddulieu1();
//            } catch (Exception e) {
//                //            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
//                JOptionPane.showMessageDialog(this, "Mã hóa đơn phòng này đã tồn tại, nếu muốn thêm với mã hóa đơn phòng này vui lòng xóa phiếu đặt phòng trong db");
//                e.printStackTrace();
//            }
//
//        }
//        if (sb.length() > 0) {
//            JOptionPane.showMessageDialog(this, sb);
//        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void bthDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthDeleteActionPerformed
        // TODO add your handling code here:

//        StringBuilder sb = new StringBuilder();
//        if (txtTenDichVu.getText().equals("")) {
//            sb.append("Mã phiếu trả phòng không được để trống");
//            txtTenDichVu.setBackground(Color.red);
//
//        } else {
//            txtTenDichVu.setBackground(Color.white);
//        }
//        if (sb.length() > 0) {
//            JOptionPane.showMessageDialog(this, sb);
//        }
//        try {
//            ModelCheckOutv2 ci = new ModelCheckOutv2();//MaHoaDonPhong
//            ci.setMaHoaDonPhong(txtTenDichVu.getText());
//
//            ModelCheckOut ql1 = new ModelCheckOut();
//            ql1.deletecomeroot(ci);
//
//            JOptionPane.showMessageDialog(this, "Lưu thành công!!!");
//
//            int row = TBcheckout.getSelectedRow();
//            if (row >= 0) {
//                String maphong = TBcheckout.getValueAt(row, 5).toString();
//
//                ModelPhongv2 p = new ModelPhongv2();
//                p.setMaPhong(maphong);
//
//                ModelPhong ql = new ModelPhong();
//                ql.updateTT3(p);
//
//            }
//
//            loaddulieu1();
//        } catch (Exception e) {
//            //            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
//            JOptionPane.showMessageDialog(this, "Mã phiếu đặt phòng này đã tồn tại, nếu muốn thêm với mã phiếu đặt phòng này vui lòng xóa phiếu đặt phòng trong db");
//            e.printStackTrace();
//        }

    }//GEN-LAST:event_bthDeleteActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void cmbmadichvuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbmadichvuItemStateChanged
        // TODO add your handling code here:
        String Mapdp = cmbmadichvu.getSelectedItem().toString();
        try {
            ModelServiceRent ql = new ModelServiceRent();

            ModelServiceRentv2 ttp = ql.findByID_MADV(Mapdp);
            if (ttp != null) {

                txtTenDichVu.setText(ttp.getTenDichVu());
                txtGiaDichvu.setText(ttp.getFormattedGia());

            } else {
                JOptionPane.showMessageDialog(this, "Không tim thấy dịch vụ");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbmadichvuItemStateChanged

    private void cmbMaNhanvienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMaNhanvienItemStateChanged
        // TODO add your handling code here:
        String MaNV = cmbMaNhanvien.getSelectedItem().toString();
        try {
            ModelServiceRent ql = new ModelServiceRent();

            ModelServiceRentv2 ttp = ql.findByID_MANV(MaNV);
            if (ttp != null) {

                txtTenNhanVien.setText(ttp.getTenNhanVien());

            } else {
                JOptionPane.showMessageDialog(this, "Không tim thấy nhân viên");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_cmbMaNhanvienItemStateChanged

    private void cmbmakhachhangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbmakhachhangItemStateChanged
        // TODO add your handling code here:
        String MaKH = cmbmakhachhang.getSelectedItem().toString();
        try {
            ModelServiceRent ql = new ModelServiceRent();

            ModelServiceRentv2 ttp = ql.findByID_MAKH(MaKH);
            if (ttp != null) {

                txtTenKH.setText(ttp.getTenKH());

            } else {
                JOptionPane.showMessageDialog(this, "Không tim thấy khách hàng");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbmakhachhangItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewActionPerformed

    private void TBcheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBcheckoutMouseClicked
        // TODO add your handling code here:
//        int row = TBcheckout.getSelectedRow();
//
//        if (row >= 0) {
//            txtMaphieutraphong.setText(TBcheckout.getValueAt(row, 0).toString());
//
//            String maphieuthuephong = TBcheckout.getValueAt(row, 1).toString();
//            System.out.println("" + maphieuthuephong);
//            cmbmaphieuthuephong.setSelectedItem(maphieuthuephong);
//
//            String ngaythuephong = TBcheckout.getValueAt(row, 2).toString();
//
//            try {
//                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
//                Date selectedDate = dateFormat.parse(ngaythuephong); // Phân tích chuỗi thành đối tượng Date
//                jDateChooserngaythuephong.setDate(selectedDate); // Đặt giá trị ngày cho JDateChooser
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }
//
//            String ngaydatphong = TBcheckout.getValueAt(row, 3).toString();
//
//            try {
//                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
//                Date selectedDate = dateFormat.parse(ngaydatphong); // Phân tích chuỗi thành đối tượng Date
//                jDateChooserngaydatphong.setDate(selectedDate); // Đặt giá trị ngày cho JDateChooser
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }
//            txtMaPhong.setText(TBcheckout.getValueAt(row, 4).toString());
//            txtTenPhong.setText(TBcheckout.getValueAt(row, 5).toString());
//            txtloaiphong.setText(TBcheckout.getValueAt(row, 6).toString());
//
//            ModelCheckOutv2 ms =new ModelCheckOutv2();
//            BigDecimal x = (BigDecimal) TBcheckout.getValueAt(row, 7);
//
//            ms.setGia(x);
//
//            String formattedDonGia = ms.getFormattedGia();
//            System.out.println(formattedDonGia);
//            txtGiaPhong.setText(formattedDonGia);
//
//            ModelCheckOutv2 mss =new ModelCheckOutv2();
//            BigDecimal xx = (BigDecimal) TBcheckout.getValueAt(row, 8);
//            mss.setGiaHD(xx);
//
//            String formattedhoadon = mss.getFormattedGiahd();
//            System.out.println(formattedhoadon);
//            txtGiahd.setText(formattedhoadon);
//
//            String ngaylaphd = TBcheckout.getValueAt(row, 9).toString();
//
//            try {
//                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Định dạng của chuỗi ngày
//                Date selectedDate = dateFormat.parse(ngaylaphd); // Phân tích chuỗi thành đối tượng Date
//                jDateChooserngaylaphd.setDate(selectedDate); // Đặt giá trị ngày cho JDateChooser
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }
//
//        }
    }//GEN-LAST:event_TBcheckoutMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TBcheckout;
    private swing.Button bthDelete;
    private swing.Button btnAdd;
    private swing.Button btnEdit;
    private swing.Button btnRefresh;
    private swing.Button btnSearch;
    private swing.Button btnView;
    private javax.swing.JComboBox<String> cmbMaNhanvien;
    private javax.swing.JComboBox<String> cmbmadichvu;
    private javax.swing.JComboBox<String> cmbmakhachhang;
    private com.toedter.calendar.JDateChooser jDateChooserTim;
    private com.toedter.calendar.JDateChooser jDateChooserngaylaphoadon;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private swing.PanelBorder panelBorder2;
    private javax.swing.JRadioButton rbMAKH1;
    private javax.swing.JRadioButton rbsearchngaydat;
    private swing.RoundPanel roundPanel5;
    private javax.swing.JSpinner spSL;
    private javax.swing.JTextField txtGiaDichvu;
    private javax.swing.JTextField txtGiahd;
    private javax.swing.JTextField txtSEARCHMAKH;
    private javax.swing.JTextField txtTenDichVu;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtloaiphong;
    // End of variables declaration//GEN-END:variables
}
