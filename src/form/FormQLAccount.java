/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;




import connect.Connect;
import java.awt.Color; 
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelAccount;
import model.ModelAccountv2;
import model.ModelCustomers;
import model.ModelCustomersv2;
import org.mindrot.jbcrypt.BCrypt;


/**
 *
 * @author TeeDee
 */
public class FormQLAccount extends javax.swing.JPanel {

    /**
     * Creates new form FormQLAccount
     */
    Connect cn = new Connect();
    Connection conn;
    private String username, password, quyen, DisplayName;
    public FormQLAccount() {
        initComponents();
    }
    
    DefaultTableModel tbmodel;
    public FormQLAccount(String username, String password, String DisplayName, String quyen) {
        initComponents();
        this.username = username;
        this.password = password;
        this.DisplayName = DisplayName;
        this.quyen = quyen;
        Time();
      
        inittable_Account();
        loadthongtintaikhoan();
       

        
    }
    public void Time() {
        TimerTask time = new TimerTask() {
            public void run() {
                Date dt = new Date();

//                lbGIO2.setText("Time: " + dt.toString().substring(11, 19));

            }
        };
        Timer timer = new Timer();
        timer.schedule(time, 0, 1000);
    }
    
    private void inittable_Account() {
        tbmodel = new DefaultTableModel();
        tbmodel.setColumnIdentifiers(new String[]{"Tên đăng nhập", "Tên tài khoản", "Mật khẩu", "Loại tài khoản"});
        tbAccount.setModel(tbmodel);
    }
    public void loadthongtintaikhoan() {
        try {
            ModelAccount ql = new ModelAccount();
            ArrayList<ModelAccountv2> list = ql.findALL();
            tbmodel.setRowCount(0);
            for (ModelAccountv2 acc : list) {
                tbmodel.addRow(new Object[]{
                    acc.getUsername(), acc.getDisplayname(), acc.getPassword(), acc.getType()
                });
            }
            tbmodel.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }

    }
    
    //  hash password
    // Số vòng lặp cho quá trình băm, tăng lên để tăng độ an toàn nhưng cũng làm tăng thời gian xử lý
    private static final int ROUNDS = 12;

    public static String hashPassword(String plainTextPassword) {
        // Tạo salt ngẫu nhiên
        String salt = BCrypt.gensalt(ROUNDS);

        // Mã hóa mật khẩu bằng cách sử dụng salt
        return BCrypt.hashpw(plainTextPassword, salt);
    }

    public static boolean checkPassword(String candidatePassword, String hashedPassword) {
        // Kiểm tra mật khẩu nhập vào có khớp với mật khẩu đã lưu không
        return BCrypt.checkpw(candidatePassword, hashedPassword);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        roundPanel2 = new swing.RoundPanel();
        roundPanel5 = new swing.RoundPanel();
        cmbLTK3 = new javax.swing.JComboBox<>();
        btnDelete = new swing.Button();
        btnAdd = new swing.Button();
        btnEdit = new swing.Button();
        btnRefresh = new swing.Button();
        txtTENDANGNHAP3 = new component.TextField();
        txtTENTAIKHOAN3 = new component.TextField();
        txtMATKHAU3 = new component.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAccount = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        panelBorder1 = new swing.PanelBorder();
        v1 = new javax.swing.JRadioButton();
        txtSearchtendangnhap1 = new javax.swing.JTextField();
        rbtTENTAIKHOAN1 = new javax.swing.JRadioButton();
        txtSEARCHTENTK1 = new javax.swing.JTextField();
        rbtLOAITAIKHOAN1 = new javax.swing.JRadioButton();
        cmbLOAITAIKHOAN1 = new javax.swing.JComboBox<>();
        btnView = new swing.Button();
        btnSearch = new swing.Button();

        setPreferredSize(new java.awt.Dimension(1095, 794));

        roundPanel2.setOpaque(true);

        roundPanel5.setBackground(new java.awt.Color(36, 87, 157));
        roundPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        cmbLTK3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        txtTENDANGNHAP3.setLabelText("Tên đăng nhập");

        txtTENTAIKHOAN3.setLabelText("Tên tài khoản");

        txtMATKHAU3.setLabelText("Mật khẩu");

        javax.swing.GroupLayout roundPanel5Layout = new javax.swing.GroupLayout(roundPanel5);
        roundPanel5.setLayout(roundPanel5Layout);
        roundPanel5Layout.setHorizontalGroup(
            roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel5Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTENDANGNHAP3, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addComponent(txtTENTAIKHOAN3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(159, 159, 159)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMATKHAU3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLTK3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel5Layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
        );
        roundPanel5Layout.setVerticalGroup(
            roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel5Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTENDANGNHAP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMATKHAU3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTENTAIKHOAN3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLTK3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(roundPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tbAccount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAccount);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Thông tin tài khoản:");

        panelBorder1.setBackground(new java.awt.Color(36, 87, 157));
        panelBorder1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        panelBorder1.setForeground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(v1);
        v1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        v1.setForeground(new java.awt.Color(255, 255, 255));
        v1.setText("Tên đăng nhập:");
        v1.setOpaque(false);

        buttonGroup1.add(rbtTENTAIKHOAN1);
        rbtTENTAIKHOAN1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbtTENTAIKHOAN1.setForeground(new java.awt.Color(255, 255, 255));
        rbtTENTAIKHOAN1.setText("Tên tài khoản:");
        rbtTENTAIKHOAN1.setOpaque(false);

        buttonGroup1.add(rbtLOAITAIKHOAN1);
        rbtLOAITAIKHOAN1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbtLOAITAIKHOAN1.setForeground(new java.awt.Color(255, 255, 255));
        rbtLOAITAIKHOAN1.setText("Loại tài khoản:");
        rbtLOAITAIKHOAN1.setOpaque(false);

        cmbLOAITAIKHOAN1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));

        btnView.setText("Xem");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(v1)
                    .addComponent(rbtTENTAIKHOAN1)
                    .addComponent(rbtLOAITAIKHOAN1))
                .addGap(54, 54, 54)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchtendangnhap1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSEARCHTENTK1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLOAITAIKHOAN1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(v1)
                            .addComponent(txtSearchtendangnhap1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtTENTAIKHOAN1)
                            .addComponent(txtSEARCHTENTK1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtLOAITAIKHOAN1)
                            .addComponent(cmbLOAITAIKHOAN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout roundPanel2Layout = new javax.swing.GroupLayout(roundPanel2);
        roundPanel2.setLayout(roundPanel2Layout);
        roundPanel2Layout.setHorizontalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(roundPanel2Layout.createSequentialGroup()
                        .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 418, Short.MAX_VALUE)))
                .addContainerGap())
        );
        roundPanel2Layout.setVerticalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addComponent(roundPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roundPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAccountMouseClicked
        // TODO add your handling code here:
        int row = tbAccount.getSelectedRow();

        if (row >= 0) {
            txtTENDANGNHAP3.setText(tbAccount.getValueAt(row, 0).toString());
            txtTENTAIKHOAN3.setText(tbAccount.getValueAt(row, 1).toString());
            txtMATKHAU3.setText(tbAccount.getValueAt(row, 2).toString());
            //txtLTAIKHOAN.setText(tbAccount.getValueAt(row, 3).toString());
            String LTAIKHOAN = tbAccount.getValueAt(row, 3).toString();
            System.out.println("" + LTAIKHOAN);
            cmbLTK3.setSelectedItem(LTAIKHOAN);
        }
    }//GEN-LAST:event_tbAccountMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtTENDANGNHAP3.getText().equals("")) {
            sb.append("tên đăng nhập không được để trống");
            txtTENDANGNHAP3.setBackground(Color.red);

        } else {
            txtTENDANGNHAP3.setBackground(Color.white);
        }
        String loai = cmbLTK3.getSelectedItem().toString();
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
        }
        try {
            // Ví dụ sử dụng
           
            
            String rawPassword = txtMATKHAU3.getText();
            String hashedPassword = hashPassword(rawPassword);
            
            ModelAccountv2 acc = new ModelAccountv2();
            acc.setUsername(txtTENDANGNHAP3.getText());
            acc.setDisplayname(txtTENTAIKHOAN3.getText());
            acc.setPassword(hashedPassword);
            //acc.setType(txtLTAIKHOAN.getText());
            acc.setType(loai);

            ModelAccount ql = new ModelAccount();
            ql.insert(acc);
            loadthongtintaikhoan();
            JOptionPane.showMessageDialog(this, "Lưu thành công");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        String loai = cmbLTK3.getSelectedItem().toString();
        if (txtTENDANGNHAP3.getText().equals("")) {
            sb.append("tên đăng nhập không được để trống");
            txtTENDANGNHAP3.setBackground(Color.red);

        } else {
            txtTENDANGNHAP3.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
        }
        if (JOptionPane.showConfirmDialog(this, "bạn có muốn sửa khách hàng không??") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            
            String rawPassword = txtMATKHAU3.getText();
            String hashedPassword = hashPassword(rawPassword);
            
            ModelAccountv2 acc = new ModelAccountv2();
            acc.setUsername(txtTENDANGNHAP3.getText());
            acc.setDisplayname(txtTENTAIKHOAN3.getText());
            acc.setPassword(hashedPassword);
            //acc.setType(txtLTAIKHOAN.getText());
            acc.setType(loai);
            ModelAccount ql = new ModelAccount();
            ql.update(acc);

            JOptionPane.showMessageDialog(this, "sửa thành công");
            loadthongtintaikhoan();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtTENDANGNHAP3.getText().equals("")) {
            sb.append("tên đăng nhập không được để trống");
            txtTENDANGNHAP3.setBackground(Color.red);

        } else {
            txtTENDANGNHAP3.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
        }
        if (JOptionPane.showConfirmDialog(this, "bạn có muốn sửa account không??") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            
            
            
            ModelAccountv2 qlx = new ModelAccountv2();
            qlx.setUsername(txtTENDANGNHAP3.getText());
            
            ModelAccount ql = new ModelAccount();
            ql.deletecomeroot(qlx);

            JOptionPane.showMessageDialog(this, "xóa thành công");
            loadthongtintaikhoan();
        } catch (Exception e) {    
            JOptionPane.showMessageDialog(this, "error " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtTENTAIKHOAN3.setText("");
        txtTENDANGNHAP3.setText("");
        cmbLTK3.setSelectedIndex(0);
        //txtSDT.setText("");
        txtMATKHAU3.setText("");
        txtSearchtendangnhap1.setText("");
        txtSEARCHTENTK1.setText("");
        txtTENDANGNHAP3.requestFocus();
        loadthongtintaikhoan();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        loadthongtintaikhoan();
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (v1.isSelected() == true) {

            try {
                String sql = "select * from account where isvisible = '1' and username like ? ";
                conn = cn.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(sql);

                String searchCriteria = "%";
                if (!txtSearchtendangnhap1.getText().equals("")) {
                    searchCriteria += txtSearchtendangnhap1.getText() + "%";

                }
                pstmt.setString(1, searchCriteria);
                ResultSet rs = pstmt.executeQuery();
                tbmodel.setRowCount(0);
                while (rs.next()) {
                    tbmodel.addRow(new Object[]{
                        rs.getString("UserName"), rs.getString("DisplayName"), rs.getString("PassWorrd"), rs.getString("Typpe")

                    });
                }
                tbmodel.fireTableDataChanged();
                //loadthongtintaikhoan();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
        } else if (rbtTENTAIKHOAN1.isSelected() == true) {

            try {
                String sql = "select * from account where isvisible = '1' and displayname like ?";
                conn = cn.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(sql);

                String searchCriteria = "%";
                if (!txtSEARCHTENTK1.getText().equals("")) {
                    searchCriteria += txtSEARCHTENTK1.getText() + "%";

                }
                pstmt.setString(1, searchCriteria);
                ResultSet rs = pstmt.executeQuery();
                tbmodel.setRowCount(0);
                while (rs.next()) {
                    tbmodel.addRow(new Object[]{
                        rs.getString("UserName"), rs.getString("DisplayName"), rs.getString("PassWorrd"), rs.getString("Typpe")

                    });
                }
                tbmodel.fireTableDataChanged();
                //loadthongtintaikhoan();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }

        } else if (rbtLOAITAIKHOAN1.isSelected() == true) {

            try {
                String hihi = cmbLOAITAIKHOAN1.getSelectedItem().toString();
                String sql = "select * from account where  isvisible = '1' and typpe = ?";
                conn = cn.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(sql);

                pstmt.setString(1, hihi);
                ResultSet rs = pstmt.executeQuery();
                tbmodel.setRowCount(0);
                while (rs.next()) {
                    tbmodel.addRow(new Object[]{
                        rs.getString("UserName"), rs.getString("DisplayName"), rs.getString("PassWorrd"), rs.getString("Typpe")

                    });
                }
                tbmodel.fireTableDataChanged();
                //loadthongtintaikhoan();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.Button btnAdd;
    private swing.Button btnDelete;
    private swing.Button btnEdit;
    private swing.Button btnRefresh;
    private swing.Button btnSearch;
    private swing.Button btnView;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbLOAITAIKHOAN1;
    private javax.swing.JComboBox<String> cmbLTK3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private swing.PanelBorder panelBorder1;
    private javax.swing.JRadioButton rbtLOAITAIKHOAN1;
    private javax.swing.JRadioButton rbtTENTAIKHOAN1;
    private swing.RoundPanel roundPanel2;
    private swing.RoundPanel roundPanel5;
    private javax.swing.JTable tbAccount;
    private component.TextField txtMATKHAU3;
    private javax.swing.JTextField txtSEARCHTENTK1;
    private javax.swing.JTextField txtSearchtendangnhap1;
    private component.TextField txtTENDANGNHAP3;
    private component.TextField txtTENTAIKHOAN3;
    private javax.swing.JRadioButton v1;
    // End of variables declaration//GEN-END:variables
}
